/**
 * @author <a href="mailto:florian.rademacher@fh-dortmund.de>Florian Rademacher</a>
 */
grammar de.fhdo.ddmm.technology.TechnologyDsl with de.fhdo.ddmm.data.DataDsl

import "de.fhdo.ddmm.technology"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "de.fhdo.ddmm.data" as data

Technology returns Technology:
    'technology' name=ID '{'
        'types' '{'
            (primitiveTypes+=TechnologySpecificPrimitiveType |
                listTypes+=TechnologySpecificListType |
                dataStructures+=TechnologySpecificDataStructure
            )+

            'compatibility' 'matrix' '{'
                compatibilityEntries+=CompatibilityMatrixEntry+
            '}'
        '}'

        'protocols' '{'
            protocols+=Protocol+
        '}'
    '}'
;

Protocol returns Protocol:
    communicationType=CommunicationType?
    name=ID
    'data' 'formats' dataFormats+=DataFormat (',' dataFormats+=DataFormat)*
    (default?='default' 'with' 'format' defaultFormat=[DataFormat])?
    ';'
;

enum CommunicationType returns CommunicationType:
    SYNCHRONOUS='sync' | ASYNCHRONOUS='async'
;

DataFormat returns DataFormat:
    formatName=ID
;

TechnologySpecificPrimitiveType returns TechnologySpecificPrimitiveType:
    'primitive' 'type' name=ID
    (
        'basic' 'type' basicBuiltinPrimitiveTypes+=PrimitiveType
            (',' basicBuiltinPrimitiveTypes+=PrimitiveType)*
        (default?='default')?
    )? ';'
;

TechnologySpecificListType returns TechnologySpecificListType:
    'list' 'type' name=ID ';'
;

TechnologySpecificDataStructure returns TechnologySpecificDataStructure:
    'structure' 'type' name=ID ';'
;

enum CompatibilityDirection returns CompatibilityDirection:
    MAPPING_TO_COMPATIBLE_TYPES='<-' |
    COMPATIBLE_TYPES_TO_MAPPING='->' |
    BIDIRECTIONAL='<->'
;

CompatibilityMatrixEntry returns CompatibilityMatrixEntry:
    compatibleTypes+=[data::Type] (',' compatibleTypes+=[data::Type])*
    direction=CompatibilityDirection
    mappingType=[data::Type]
     ';'
;